# 쉬운 거긴 한데 이 코드를 오늘 적게 돼서 오늘 한 거니 & 등차 개념으로 올림

for a in range(5,0,-1):
    print('*'*a)
    # m2)
    # t='*'
    # print(f'{t*a}')
print('\n\n')

for a in range(1,9,2):
    # m 1)_뭔가 덜 직관적인 방법 같아서 넘어감
    # 중앙의 기준 = 최대 개수가 홀수 : max//2+1 번째 [max//2], 짝수 :  max/2번째, max/2+1번째
    
    # m2) a는 "2"씩 증가 -> "-1"씩  : -(a//2) ##굳이 일차방정식으로 풀진 않았지만 굳이 수식을 적는다면 적을수야 있겠지
    # 앞 : 공백 갯수 / 중간 : 별 출력
    #     공백 : n_line-1개 부터, 1개씩 줄어듬 
    #     등차 맞추고 첫항 맞춰
    
    print(' '*(-a//2+4),'*'*a,sep='')#  (-a)//2라서 음수면 절댓값이 큰쪽으로 떨어져버림  # 별 먼저봐서 별 개수 a기준으로 수식 맞춤

    # m3) 아예 등차수열 -> m2가 더 빠를듯
    # 공백=n*d-k  # a0+(n-1)d
print('\n\n')


for a in range(5,-1,-2):
    print(' '*(-a//2 +1+2 ) ,'*'*a) # a는 2씩 감소
print('\n\n')



for a in range(9,1,-2):
    print(' '*(-(a//2)+4 ),'*'*a ,sep='') # 저번엔 (-a)//2가 돼서 그랬음
for a in range(1,11,2):
    print(' '*(-(a//2)+4 ),'*'*a ,sep='') 
print('\n\n')


'''

*****
****
***
**
*



   *
  ***
 *****
*******



 *****
  ***
   *



*********
 *******
  *****
   ***
    *
   ***
  *****
 *******
*********



'''
 